local variant_00 = "asset/batiment/nantes/nantes_manufacture.mdl"
local variant_01 = "asset/batiment/nantes/nantes_messagerie.mdl"

function data()
    return {
        type = "ASSET_DEFAULT",
        description = {
            name = _("Batiment & Structure"),
            --description = _("Asset Nantes"),
            icon = "ui/construction/asset/building.tga",
        },
        buildMode = "MULTI",
        categories = { "PDL" },
        order = 1,
        skipCollision = true,
        autoRemovable = true,
        params = {
            {
                key = "variant_gare", 
                name = _("Variantes"), --Strings: ["asset_variants"] = "Variantes", --les petites images si tu veux les images
                uiType = "COMBOBOX",
                values = {	_("Manufacture"),
                            _("Messagerie"),
                        },
            },
            {
                key = "Assets_terrainAlignment",
                name = _("Alignement de terrain"),
                values = { _("Yes"), _("No") },
                defaultIndex = 1
            }
        },
           
        updateFn = function(params)
            local result = { }
            result.models = { }
            local grad = 0
            local height = 0
            local shiftm = 0
            local spacingm = 0
            local offsetz = 0

            if ( params.variant_gare == 0 ) then result.models[#result.models+1] = { id = variant_00, transf = { 1, 0, grad, 0, 0, 1, 0, 0, grad, 0, 1, 0, spacingm, shiftm, height+offsetz, 1 } } end
            if ( params.variant_gare == 1 ) then result.models[#result.models+1] = { id = variant_01, transf = { 1, 0, grad, 0, 0, 1, 0, 0, grad, 0, 1, 0, spacingm, shiftm, height+offsetz, 1 } } end

            result.groundFaces = {
                {  
                face = { { -0.01, -0.01, 0 }, { 0.01, -0.01, 0 }, { 0.01, 0.01, 0 } },
                modes = {
                    {
                        type = "FILL",               
                        key = "industry_floor.lua"
                    }
                },
                loop = true,
                alignmentOffsetMode = "OBJECT",
                alignmentDirMode = "OBJECT",
                alignmentOffset = { -2.0, -1.0 },
                },
            }

            if params.Assets_terrainAlignment == 1 then
                result.terrainAlignmentLists = { { type = "GREATER", faces =  { } } }
            end
            
            return result
        end
    }
end